---
- name: Genie를 활용한 Mold VM 배포
  hosts: localhost
  gather_facts: no
  tasks:
##### Deploy VirtualMachine #####

    - name: 가상머신 생성
      cs_instance:
        api_url: "{{ lookup('env', 'MOLD_API_URL') }}"
        api_key: "{{ lookup('env', 'MOLD_API_KEY') }}"
        api_secret: "{{ lookup('env', 'MOLD_SECRET_KEY') }}"
        zone: "{{ lookup('env', 'MOLD_ZONE_NAME') }}"
        name: hwryu-deploy-vm2
        template: CentOS-8-5-2111-cloudinit
        service_offering: 2C-4GB-RBD
        ssh_key: "{{ lookup('env', 'MOLD_SSH_KEYPAIR') }}"
        user_data: |
            #cloud-config
            disable_root: false
            ssh_pwauth: true
        networks:
          - "{{ lookup('env', 'AC_NETWORK_NAME') }}"

    - name: 가상머신 생성 후 ssh_key 생성을 위한 대기
      wait_for:
        timeout: 15

    - name: 배포한 가상머신 정보 수집
      cs_instance_info:
        api_url: "{{ lookup('env', 'MOLD_API_URL') }}"
        api_key: "{{ lookup('env', 'MOLD_API_KEY') }}"
        api_secret: "{{ lookup('env', 'MOLD_SECRET_KEY') }}"
        name: hwryu-deploy-vm2
      delegate_to: localhost
      register: vm

    - name: 배포 가상머신 ip 정보 수집
      debug:
        msg: "{{ vm.instances[0].nic[0].ipaddress }}"

    - name: Create Public IP
      cs_ip_address:
        api_url: "{{ lookup('env', 'MOLD_API_URL') }}"
        api_key: "{{ lookup('env', 'MOLD_API_KEY') }}"
        api_secret: "{{ lookup('env', 'MOLD_SECRET_KEY') }}"
        zone: "{{ lookup('env', 'MOLD_ZONE_NAME') }}"
        network: "{{ lookup('env', 'AC_NETWORK_NAME') }}"
      register: ac_public_ip

    - name: Public IP 정보 수집
      debug:
        msg: "{{ ac_public_ip.ip_address }}"

    - name: Create a static NAT for 'ac_public_ip.ip_address' to hwryu-deploy-vm2
      cs_staticnat:
        api_url: "{{ lookup('env', 'MOLD_API_URL') }}"
        api_key: "{{ lookup('env', 'MOLD_API_KEY') }}"
        api_secret: "{{ lookup('env', 'MOLD_SECRET_KEY') }}"
        ip_address: "{{ ac_public_ip.ip_address }}"
        zone: "{{ lookup('env', 'MOLD_ZONE_NAME') }}"
        vm: hwryu-deploy-vm2
      delegate_to: localhost

    - name: 배포 가상머신 인메모리 inventory에 등록
      add_host:
        hostname: "{{ vm.instances[0].nic[0].ipaddress }}"
        groups:
          - deployVmIp

    - name: Allow 88 port for public ip
      cs_firewall:
        api_url: "{{ lookup('env', 'MOLD_API_URL') }}"
        api_key: "{{ lookup('env', 'MOLD_API_KEY') }}"
        api_secret: "{{ lookup('env', 'MOLD_SECRET_KEY') }}"
        ip_address: "{{ ac_public_ip.ip_address }}"
        zone: "{{ lookup('env', 'MOLD_ZONE_NAME') }}"
        start_port: 80
        end_port: 80
        protocol: tcp
      delegate_to: localhost

    - name: Allow 22 port for public ip
      cs_firewall:
        api_url: "{{ lookup('env', 'MOLD_API_URL') }}"
        api_key: "{{ lookup('env', 'MOLD_API_KEY') }}"
        api_secret: "{{ lookup('env', 'MOLD_SECRET_KEY') }}"
        ip_address: "{{ ac_public_ip.ip_address }}"
        zone: "{{ lookup('env', 'MOLD_ZONE_NAME') }}"
        start_port: 22
        end_port: 22
        protocol: tcp
      delegate_to: localhost
      
##### State Httpd #####
- name: "State Httpd"
  hosts: deployVmIp
  connection: local
  gather_facts: no
  vars:
    - service: sshd.service
  tasks:
    - command: /usr/bin/ssh-keyscan -t ecdsa {{ ansible_host }} #"{{ ansible_host }}"변수에 Inventory에 등록된 Node를 불러와 하나씩 대입
      register: keyscan #command로 확인된 Node의 키 값을 keyscan이라는 변수에 저장

    - lineinfile:
        name=~/.ssh/known_hosts
        create=yes
        line={{ item }} #keyscan 변수에 있는 값이 stdout_lines으로 출력되면 Known_hosts파일에 한줄씩 작성
      with_items:
        - "{{ keyscan.stdout_lines }}"

    - name: populate service facts
      ansible.builtin.service_facts:
      delegate_to: localhost
    - debug: var=services[service]['status']
    - debug:
        msg: "{{ services[service]['status'] }}"
    - name: debug set fact
      set_fact:
        http_status: "{{ services[service]['status'] }}"
      delegate_to: localhost
